name: Python application

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f Docker-Project/requirements.txt ]; then pip install -r Docker-Project/requirements.txt; fi
    - name: Lint with flake8
      run: |
        # Navigate to the project directory
        cd Docker-Project
        # stop the build if there are Python syntax errors or undefined names
        flake8 app --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 app --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        # Navigate to the project directory
        cd Docker-Project
        pip install pytest
        export PYTHONPATH=app
    - name: Build And Push Docker Image
      uses: mr-smithers-excellent/docker-build-push@v6
      with:
        dockerfile: Docker-Project/Dockerfile
        directory: Docker-Project
        image: sadeghrm/arvan
        registry: docker.io
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    - name: Notify Mattermost
      if: always() # Ensure this runs after all steps.
      env:
        MATTERMOST_WEBHOOK_URL: https://chat.uself.org/hooks/39p8mttxffdzidzs1fbrcs8phy
        PIPELINE_STATUS: ${{ job.status }}
      run: |
        curl -X POST -H 'Content-Type: application/json' \
        --data "{\"text\": \"Pipeline for ${{ github.repository }} on branch ${{ github.ref }} has completed with status: ${PIPELINE_STATUS}\"}" \
        $MATTERMOST_WEBHOOK_URL
